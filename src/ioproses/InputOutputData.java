/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ioproses;

import convert.imageconvert;
import java.awt.image.BufferedImage;
import java.io.*;
import java.text.DecimalFormat;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.IIOImage;
import javax.imageio.ImageIO;
import javax.imageio.ImageWriteParam;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Freddy
 */
public class InputOutputData extends javax.swing.JFrame {
    private String inputdata,outputdata,hasil;
    
    private boolean jpg=false,png=false,tiff=false,gif=false;
    //loat ratiojpg=(float) 0.7,ratiopng,ratiotiff,ratiogif;
    File inputfile,outputfile;
    /**
     * Creates new form InputOutputData
     */
    public InputOutputData() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        popup = new javax.swing.JOptionPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Text1 = new javax.swing.JTextField();
        Text2 = new javax.swing.JTextField();
        Open1 = new javax.swing.JToggleButton();
        Open2 = new javax.swing.JToggleButton();
        StartProcess = new javax.swing.JToggleButton();
        Exit = new javax.swing.JToggleButton();
        Jpeg = new javax.swing.JCheckBox();
        Png = new javax.swing.JCheckBox();
        Gif = new javax.swing.JCheckBox();
        Tiff = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Input Path    :");

        jLabel2.setText("Output Path :");

        Text1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text1ActionPerformed(evt);
            }
        });

        Text2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text2ActionPerformed(evt);
            }
        });

        Open1.setText("Open");
        Open1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open1ActionPerformed(evt);
            }
        });

        Open2.setText("Open");
        Open2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open2ActionPerformed(evt);
            }
        });

        StartProcess.setText("Start");
        StartProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartProcessActionPerformed(evt);
            }
        });

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        Jpeg.setText("JPEG");
        Jpeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JpegActionPerformed(evt);
            }
        });

        Png.setText("PNG");
        Png.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PngActionPerformed(evt);
            }
        });

        Gif.setText("GIF");
        Gif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GifActionPerformed(evt);
            }
        });

        Tiff.setText("TIFF");
        Tiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TiffActionPerformed(evt);
            }
        });

        jLabel3.setText("Convert to ");

        jLabel4.setText("Created by");

        jLabel5.setText("Freddy Hermawan Yuwono 5113100040");

        jLabel6.setText("Julio Anthony L 5113100148");

        jLabel7.setText("M. Rijal 51131000193");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Text1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Text2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(StartProcess)
                                                .addGap(80, 80, 80)
                                                .addComponent(Exit))
                                            .addComponent(jLabel5))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Open1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Open2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Png)
                            .addComponent(Jpeg)
                            .addComponent(Gif)
                            .addComponent(Tiff)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7))
                            .addComponent(jLabel6))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Open1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Text2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Open2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addComponent(Jpeg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Png)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Gif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tiff)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartProcess)
                    .addComponent(Exit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String convert(String input,String ouput,String format) throws IOException
    {
            String temp;
            File i= new File(input);
            boolean result =imageconvert.convertFormat(input, ouput, format);
            File o= new File(ouput+"."+format);
            double out =o.length();
            double in=i.length();
            double ratio =(Math.abs(in-out)/in)*100;
            DecimalFormat df =new DecimalFormat("#.###");
            String temp1=df.format(ratio);
            
            if (result) {
                        temp="BMP Image converted successfully to "+format+ " and ratio = " +temp1 +"%\n";
                        
                        //System.out.println("BMP Image converted successfully to "+format+ " and ratio = " +ratio*100 +"%");
                } else {
                        temp="Could not convert"+ format+" image\n.";
                        //System.out.println("Could not convert image.");
        
            }
                        return temp;
    }
    
    
    
    private void Text1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text1ActionPerformed
        /*inputdata=Text1.getText();
        if(inputdata!=String.valueOf(inputfile))
        inputfile= new File (inputdata);*/
    }//GEN-LAST:event_Text1ActionPerformed

    private void Open1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open1ActionPerformed
        int retval = fileChooser.showOpenDialog(this);
        if (retval==JFileChooser.APPROVE_OPTION)
        {
            inputfile = fileChooser.getSelectedFile();
            inputdata = String.valueOf(inputfile);
            Text1.setText(inputdata);
        }
    }//GEN-LAST:event_Open1ActionPerformed

    private void Open2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open2ActionPerformed
        int retval1 = fileChooser.showOpenDialog(this);
        if (retval1==JFileChooser.APPROVE_OPTION)
        {
            String tempof;
            outputfile = fileChooser.getSelectedFile();
            tempof = String.valueOf(outputfile);
            String[] bufferof =tempof.split("\\.");
            outputdata=bufferof[0];
            Text2.setText(outputdata);
        }
    }//GEN-LAST:event_Open2ActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void StartProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartProcessActionPerformed
       String data="";
        if(jpg)
       {
           try {
               data+=convert(inputdata,outputdata,"jpg");
           } catch (IOException ex) {
               Logger.getLogger(InputOutputData.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
       if (gif)
       {
           
           try {
               data+=convert(inputdata,outputdata,"gif");
                       } catch (IOException ex) {
               Logger.getLogger(InputOutputData.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
       if (png)
       {
           
           try {
               data+=convert(inputdata,outputdata,"png");
                       } catch (IOException ex) {
               Logger.getLogger(InputOutputData.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
       if(tiff)
       {
            try {
               data+=convert(inputdata,outputdata,"tif");
                       } catch (IOException ex) {
               Logger.getLogger(InputOutputData.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
       if(data!=null)
       {
           JOptionPane.showMessageDialog(rootPane, data);
       }
    }//GEN-LAST:event_StartProcessActionPerformed

    private void Text2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text2ActionPerformed
        /*outputdata=Text2.getText();
        if(outputdata!=String.valueOf(outputfile))
        outputfile = new File(outputdata);*/
    }//GEN-LAST:event_Text2ActionPerformed

    private void JpegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JpegActionPerformed
        if(Jpeg.isSelected()==true)jpg=true;
        else jpg=false;
    }//GEN-LAST:event_JpegActionPerformed

    private void TiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TiffActionPerformed
       if(Tiff.isSelected()==true)tiff=true;
       else tiff=false;
    }//GEN-LAST:event_TiffActionPerformed

    private void PngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PngActionPerformed
        if(Png.isSelected()==true)png=true;
        else png=false;
    }//GEN-LAST:event_PngActionPerformed

    private void GifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GifActionPerformed
        if(Gif.isSelected()==true)gif=true;
        else gif=false;
    }//GEN-LAST:event_GifActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputOutputData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputOutputData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputOutputData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputOutputData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputOutputData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Exit;
    private javax.swing.JCheckBox Gif;
    private javax.swing.JCheckBox Jpeg;
    private javax.swing.JToggleButton Open1;
    private javax.swing.JToggleButton Open2;
    private javax.swing.JCheckBox Png;
    private javax.swing.JToggleButton StartProcess;
    private javax.swing.JTextField Text1;
    private javax.swing.JTextField Text2;
    private javax.swing.JCheckBox Tiff;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JOptionPane popup;
    // End of variables declaration//GEN-END:variables
}
